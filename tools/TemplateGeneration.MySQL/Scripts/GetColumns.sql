WITH ReferencedKeys (SchemaName, TableName, ColumnName, ReferencedTableName, ReferencesIdentity)
AS
(
	SELECT
        KEY_COLUMN_USAGE.TABLE_SCHEMA AS SchemaName,
        KEY_COLUMN_USAGE.TABLE_NAME AS TableName,
        KEY_COLUMN_USAGE.COLUMN_NAME AS ColumnName,
        KEY_COLUMN_USAGE.REFERENCED_TABLE_NAME AS ReferencedTableName,
        CASE WHEN EXTRA LIKE '%auto_increment%' THEN 1 ELSE 0 END AS ReferencesIdentity
	FROM
       INFORMATION_SCHEMA.KEY_COLUMN_USAGE
	INNER JOIN INFORMATION_SCHEMA.COLUMNS ON KEY_COLUMN_USAGE.REFERENCED_COLUMN_NAME = COLUMNS.COLUMN_NAME AND KEY_COLUMN_USAGE.REFERENCED_TABLE_NAME = COLUMNS.TABLE_NAME AND KEY_COLUMN_USAGE.REFERENCED_TABLE_SCHEMA = COLUMNS.TABLE_SCHEMA  
)
SELECT 
	COLUMNS.COLUMN_NAME AS ColumnName,
	CASE WHEN COLUMNS.IS_NULLABLE = 'YES' THEN 1 ELSE 0 END AS IsNullable,
	COLUMNS.COLUMN_DEFAULT AS DefaultValue,
	CASE WHEN COLUMNS.COLUMN_TYPE = 'tinyint(1)' THEN 'bool' ELSE COLUMNS.DATA_TYPE END AS DataType,
	COLUMNS.CHARACTER_MAXIMUM_LENGTH AS MaxCharacterLength,
	CASE WHEN EXTRA LIKE '%auto_increment%' THEN 1 ELSE 0 END AS IsIdentity,
	 CASE WHEN ReferencedKeys.ColumnName IS NOT NULL THEN 1 ELSE 0 END AS IsForeignKey,
	COLUMNS.TABLE_SCHEMA AS SchemaName,
	COLUMNS.TABLE_NAME AS TableName,
	 ReferencedKeys.ReferencedTableName,
	 COALESCE(ReferencedKeys.ReferencesIdentity, 0) AS ReferencesIdentity
FROM INFORMATION_SCHEMA.COLUMNS
INNER JOIN INFORMATION_SCHEMA.TABLES ON COLUMNS.TABLE_NAME = TABLES.TABLE_NAME AND COLUMNS.TABLE_SCHEMA = TABLES.TABLE_SCHEMA AND TABLES.TABLE_TYPE = 'BASE TABLE'
LEFT JOIN ReferencedKeys
ON ReferencedKeys.SchemaName = COLUMNS.TABLE_SCHEMA
AND ReferencedKeys.TableName = COLUMNS.TABLE_NAME
AND ReferencedKeys.ColumnName = COLUMNS.COLUMN_NAME
 WHERE COLUMNS.TABLE_SCHEMA = Database() AND COLUMNS.TABLE_NAME LIKE @TableName
 ORDER BY
 	COLUMNS.ORDINAL_POSITION ASC;