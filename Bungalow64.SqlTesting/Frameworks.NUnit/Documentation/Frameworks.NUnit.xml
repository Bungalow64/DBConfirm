<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Frameworks.NUnit</name>
    </assembly>
    <members>
        <member name="T:Frameworks.NUnit.NUnitFramework">
            <summary>
            The test framework using NUnit
            </summary>
        </member>
        <member name="M:Frameworks.NUnit.NUnitFramework.AreEqual(System.Object,System.Object,System.String,System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Frameworks.NUnit.NUnitFramework.AreNotEqual(System.Object,System.Object,System.String,System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Frameworks.NUnit.NUnitFramework.Contains``1(System.Collections.Generic.List{``0},``0,System.String,System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Frameworks.NUnit.NUnitFramework.DoesNotContain``1(System.Collections.Generic.List{``0},``0,System.String,System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Frameworks.NUnit.NUnitFramework.Matches(System.String,System.Text.RegularExpressions.Regex,System.String,System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Frameworks.NUnit.NUnitFramework.DoesNotMatch(System.String,System.Text.RegularExpressions.Regex,System.String,System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Frameworks.NUnit.NUnitFramework.Fail(System.String,System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Frameworks.NUnit.NUnitFramework.IsInstanceOfType(System.Object,System.Type,System.String,System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Frameworks.NUnit.NUnitFramework.IsTrue(System.Boolean,System.String,System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Frameworks.NUnit.TestBase">
            <summary>
            The abstract base class for test classes using NUnit
            </summary>
        </member>
        <member name="P:Frameworks.NUnit.TestBase.TestFramework">
            <summary>
            Gets and sets the <see cref="T:Models.TestFrameworks.Abstract.ITestFramework"/> to be used for assertions, by default using <see cref="T:Frameworks.NUnit.NUnitFramework"/> 
            </summary>
        </member>
        <member name="M:Frameworks.NUnit.TestBase.GetParameter(System.String)">
            <summary>
            Gets the value of the parameter from <see cref="T:NUnit.Framework.TestContext"/>.  If the parameter does not exist, null is returned
            </summary>
            <param name="parameterName">The name of the parameter</param>
            <returns>Returns the value of the parameter, or null if the parameter is not found</returns>
        </member>
        <member name="M:Frameworks.NUnit.TestBase.Init">
            <summary>
            The initialisation called before each test, to set up the <see cref="T:Models.Runners.Abstract.ITestRunner"/> for the test, and making the initial connection to the target database
            </summary>
            <returns>A task representing the asynchronous operation</returns>
        </member>
        <member name="M:Frameworks.NUnit.TestBase.Cleanup">
            <summary>
            The cleaup called after each test, to dispose the current instance of <see cref="T:Models.Runners.Abstract.ITestRunner"/>, rolling back the transaction and closing the connection
            </summary>
        </member>
    </members>
</doc>
